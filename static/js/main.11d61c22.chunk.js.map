{"version":3,"sources":["styles/StyledHelpForm.js","components/HelpForm.js","styles/StyledAssistanceType.js","components/AssistanceType.js","styles/StyledPaymentMethod.js","components/PaymentMethod.js","styles/fonts/Gilroy-FREE/Gilroy-Light.otf","styles/fonts/Gilroy-FREE/Gilroy-ExtraBold.otf","styles/GlobalStyle.js","styles/StyledApp.js","App.js","index.js"],"names":["StyledHelpForm","styled","div","HelpForm","person","setPerson","className","map","per","index","onClick","type","StyledAssistanceType","AssistanceType","useState","chooseHelp","setChooseHelp","helps","title","image","FaHandPaper","FaWallet","FaTshirt","FaRegHeart","help","StyledPaymentMethod","PaymentMethod","chooseCard","setChooseCard","cards","description","GiBank","SiWebmoney","SiPaypal","card","GlobalStyle","createGlobalStyle","normalize","GilroyLight","GilroyExtraBold","StyledApp","App","initialValues","name","secondName","company","email","tel","country","city","state","address","zipCode","oneFour","fiveEight","nineTwelve","thirteenSixteen","cardMonth","cardCVV","onSubmit","values","setSubmitting","console","log","setTimeout","alert","JSON","stringify","isSubmitting","required","minLength","maxLength","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11d61c22.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledHelpForm = styled.div`\r\n  margin-bottom: 40px;\r\n\r\n  @media (max-width: 500px) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .btn-wrapper {\r\n    text-align: center;\r\n  }\r\n\r\n  .btn {\r\n    color: #363c5c;\r\n    border: 1px solid #363c5c;\r\n    height: 40px;\r\n    width: 115px;\r\n    transition: 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 500px) {\r\n      font-size: 14px;\r\n      height: 30px;\r\n      width: 100px;\r\n    }\r\n\r\n    :first-child {\r\n      border-radius: 4px 0 0 4px;\r\n    }\r\n\r\n    :last-child {\r\n      border-radius: 0 4px 4px 0;\r\n    }\r\n\r\n    &:hover {\r\n      border-color: transparent;\r\n    }\r\n  }\r\n\r\n  .active {\r\n    color: #fff;\r\n    background-color: #363c5c;\r\n  }\r\n`;\r\n","import { StyledHelpForm } from '../styles/StyledHelpForm';\r\n\r\nconst HelpForm = ({ person, setPerson }) => {\r\n  const choosePerson = ['Фіз. особа', 'Юр. особа'];\r\n\r\n  return (\r\n    <StyledHelpForm>\r\n      <h2>Заповніть форму</h2>\r\n      <div className='btn-wrapper'>\r\n        {choosePerson.map((per, index) => (\r\n          <button\r\n            className={`btn ${person === index ? 'active' : ''}`}\r\n            onClick={() => setPerson(index)}\r\n            type='button'\r\n            key={`${per}-${index}`}\r\n          >\r\n            {per}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </StyledHelpForm>\r\n  );\r\n};\r\n\r\nexport default HelpForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledAssistanceType = styled.div`\r\n  margin-bottom: 25px;\r\n\r\n  p {\r\n    text-align: center;\r\n    margin: 0 0 40px;\r\n  }\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    padding: 0 30px;\r\n\r\n    @media (max-width: 600px) {\r\n      padding: 0;\r\n    }\r\n  }\r\n\r\n  .item {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 18px;\r\n    list-style: none;\r\n    height: 80px;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 1000px) {\r\n      width: 50%;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .image {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 80px;\r\n    height: 80px;\r\n    border: 2px solid #d2d5dc;\r\n    border-radius: 15px;\r\n    margin-right: 15px;\r\n    transition: 0.3s;\r\n  }\r\n\r\n  .active .image {\r\n    background-color: #946296;\r\n    border-color: #946296;\r\n  }\r\n\r\n  .logo {\r\n    width: 35px;\r\n    height: 35px;\r\n    fill: #d2d5dc;\r\n    transition: 0.3s;\r\n  }\r\n\r\n  .active .logo {\r\n    fill: #fff;\r\n  }\r\n\r\n  .title {\r\n    color: #d2d5dc;\r\n    margin: 0;\r\n    max-width: 120px;\r\n    @media (max-width: 1000px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .active .title {\r\n    color: #878ca0;\r\n  }\r\n\r\n  .color {\r\n    fill: blue;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { FaHandPaper, FaWallet, FaTshirt, FaRegHeart } from 'react-icons/fa';\r\nimport { StyledAssistanceType } from '../styles/StyledAssistanceType';\r\n\r\nconst AssistanceType = () => {\r\n  const [chooseHelp, setChooseHelp] = useState(1);\r\n  const helps = [\r\n    { title: 'Зробити', image: FaHandPaper },\r\n    { title: 'Фінансова допомога', image: FaWallet },\r\n    { title: 'Матеріальна допомога', image: FaTshirt },\r\n    { title: 'Волонтерство', image: FaRegHeart }\r\n  ];\r\n\r\n  return (\r\n    <StyledAssistanceType>\r\n      <h2>Види допомоги</h2>\r\n      <p>Ви можете змінити вид допомоги</p>\r\n      <ul>\r\n        {helps.map((help, index) => (\r\n          <li\r\n            className={`item ${chooseHelp === index ? 'active' : ''}`}\r\n            onClick={() => setChooseHelp(index)}\r\n            key={`${help.title}-${index}`}\r\n          >\r\n            <div className='image'>\r\n              <help.image className='logo' />\r\n            </div>\r\n            <h4 className='title'>{help.title}</h4>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </StyledAssistanceType>\r\n  );\r\n};\r\n\r\nexport default AssistanceType;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledPaymentMethod = styled.div`\r\n  width: 100%;\r\n\r\n  .payment {\r\n    color: #9c9ca5;\r\n    margin-left: 5px;\r\n\r\n    @media (max-width: 1200px) {\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  .cards-wrapper {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    @media (max-width: 1200px) {\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  .card-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    color: #f2f9fc;\r\n    background-color: #c8d5e5;\r\n    border-radius: 10px;\r\n    width: 170px;\r\n    height: 85px;\r\n    margin: 0 20px 20px 0;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n\r\n    :nth-child(3n) {\r\n      margin-right: 0;\r\n    }\r\n\r\n    @media (max-width: 1200px) {\r\n      margin: 0 20px 20px;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      width: 60%;\r\n      margin: 0 0 20px;\r\n    }\r\n\r\n    @media (max-width: 400px) {\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  .active {\r\n    color: #fff;\r\n    background-color: #936397;\r\n  }\r\n\r\n  h4 {\r\n    font-size: 18px;\r\n    color: #f4f8fb;\r\n    margin: 5px 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 13px;\r\n    color: #f4f8fb;\r\n    margin: 5px 0;\r\n  }\r\n\r\n  .active h4,\r\n  .active p {\r\n    color: #fff;\r\n  }\r\n\r\n  .logo {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { SiWebmoney, SiPaypal } from 'react-icons/si';\r\nimport { GiBank } from 'react-icons/gi';\r\nimport { StyledPaymentMethod } from '../styles/StyledPaymentMethod';\r\n\r\nconst PaymentMethod = () => {\r\n  const [chooseCard, setChooseCard] = useState(0);\r\n  const cards = [\r\n    { title: 'VISA', description: 'Карта Visa/Mastercard' },\r\n    { title: 'Приват24', description: 'Приват24' },\r\n    { image: GiBank, description: 'Термінали України' },\r\n    { image: SiWebmoney, description: 'WebMoney' },\r\n    { image: SiPaypal, description: 'PayPal' }\r\n  ];\r\n\r\n  return (\r\n    <StyledPaymentMethod>\r\n      <p className='payment'>Спосіб оплати</p>\r\n      <div className='cards-wrapper'>\r\n        {cards.map((card, index) => (\r\n          <div\r\n            className={`card-item ${chooseCard === index ? 'active' : ''}`}\r\n            onClick={() => setChooseCard(index)}\r\n            key={`${card.description}-${index}`}\r\n          >\r\n            <h4>{card.title && card.title}</h4>\r\n            {card.image && <card.image className='logo' />}\r\n            <p>{card.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </StyledPaymentMethod>\r\n  );\r\n};\r\n\r\nexport default PaymentMethod;\r\n","export default __webpack_public_path__ + \"static/media/Gilroy-Light.cc7ab55d.otf\";","export default __webpack_public_path__ + \"static/media/Gilroy-ExtraBold.0094146a.otf\";","import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\nimport GilroyLight from './fonts/Gilroy-FREE/Gilroy-Light.otf';\r\nimport GilroyExtraBold from './fonts/Gilroy-FREE/Gilroy-ExtraBold.otf';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n\r\n  @font-face {\r\n        font-family: 'Gilroy';\r\n        src: url(${GilroyLight}) format('opentype');\r\n        font-weight: 300;\r\n        font-style: normal;\r\n    }\r\n\r\n  @font-face {\r\n        font-family: 'Gilroy';\r\n        src: url(${GilroyExtraBold}) format('opentype');\r\n        font-weight: 800;\r\n        font-style: normal;\r\n    }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, \r\n  *:before, \r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Gilroy', sans-serif;\r\n    font-weight: 300;\r\n    max-width: 1200px;\r\n    padding: 0 30px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 70px;\r\n    font-weight: 800;\r\n    text-align: center;\r\n    color: #353d5b;\r\n    margin: 15px 0;\r\n\r\n    @media (max-width: 940px) {\r\n      font-size: 62px;\r\n    }\r\n\r\n    @media (max-width: 700px) {\r\n      font-size: 50px;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      font-size: 36px;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      font-size: 32px;\r\n    }\r\n  }\r\n\r\n  p {\r\n    color: #9C9CA5;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledApp = styled.div`\r\n  label {\r\n    color: #c2c3c5;\r\n    cursor: pointer;\r\n\r\n    span {\r\n      font-size: 12px;\r\n      display: block;\r\n      margin-bottom: 4px;\r\n\r\n      @media (max-width: 940px) {\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n\r\n  input {\r\n    font-size: 16px;\r\n    color: #000;\r\n    background-color: #f2f2f2;\r\n    border: none;\r\n    border-radius: 5px;\r\n    display: block;\r\n    width: 420px;\r\n    max-width: 100%;\r\n    height: 40px;\r\n    margin-bottom: 35px;\r\n    padding: 0 15px;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 940px) {\r\n      width: 750px;\r\n      margin: 0 auto 30px;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .form-wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0px;\r\n\r\n    @media (max-width: 940px) {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  .name-wrapper,\r\n  .city-wrapper {\r\n    display: flex;\r\n\r\n    @media (max-width: 940px) {\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n\r\n    label {\r\n      &:first-child {\r\n        margin-right: 20px;\r\n\r\n        @media (max-width: 940px) {\r\n          margin-right: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    input {\r\n      width: 200px;\r\n\r\n      @media (max-width: 940px) {\r\n        width: 750px;\r\n        margin-bottom: 30px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .payment-wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border: 2px solid #d2d5dc;\r\n    border-radius: 20px;\r\n    padding: 10px 15px;\r\n\r\n    @media (max-width: 1200px) {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  .card {\r\n    width: 100%;\r\n\r\n    p {\r\n      font-size: 14px;\r\n      margin: 5px 0 5px 175px;\r\n\r\n      @media (max-width: 1200px) {\r\n        text-align: center;\r\n        margin: 0 0 5px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .bank-card {\r\n    background-color: #c8d5e5;\r\n    border-radius: 20px;\r\n    margin-left: 170px;\r\n    padding: 15px 25px;\r\n    width: 375px;\r\n    max-width: 100%;\r\n    height: 190px;\r\n\r\n    @media (max-width: 1200px) {\r\n      margin: 0 auto;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n      width: 320px;\r\n      height: 170px;\r\n    }\r\n\r\n    @media (max-width: 400px) {\r\n      padding: 10px 15px;\r\n      height: 160px;\r\n    }\r\n\r\n    span {\r\n      font-size: 14px;\r\n      color: #fff;\r\n      display: block;\r\n      margin-bottom: 2px;\r\n    }\r\n  }\r\n\r\n  .bank-card__number {\r\n    @media (max-width: 500px) {\r\n      margin-left: 14px;\r\n    }\r\n\r\n    @media (max-width: 400px) {\r\n      text-align: center;\r\n      margin-left: 0;\r\n    }\r\n  }\r\n\r\n  .full-number {\r\n    display: flex;\r\n\r\n    input {\r\n      font-size: 18px;\r\n      text-align: center;\r\n      width: 75px;\r\n      margin-right: 10px;\r\n\r\n      @media (max-width: 500px) {\r\n        font-size: 14px;\r\n        width: 50px;\r\n        height: 30px;\r\n        margin-right: 4px;\r\n        padding: 0 5px;\r\n      }\r\n\r\n      @media (max-width: 400px) {\r\n        width: 45px;\r\n      }\r\n\r\n      &:last-child {\r\n        margin-right: 0;\r\n\r\n        @media (max-width: 500px) {\r\n          margin-right: 4px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .bank-card__wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .bank-card__month,\r\n  .bank-card__password {\r\n    input {\r\n      width: 130px;\r\n      margin: 0;\r\n\r\n      @media (max-width: 500px) {\r\n        width: 120px;\r\n        height: 35px;\r\n      }\r\n\r\n      @media (max-width: 400px) {\r\n        width: 100px;\r\n      }\r\n\r\n      @media (max-width: 360px) {\r\n        width: 80px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .btn-submit {\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    background: rgb(217, 70, 87);\r\n    background: linear-gradient(\r\n      90deg,\r\n      rgba(217, 70, 87, 1) 0%,\r\n      rgba(186, 80, 112, 1) 30%,\r\n      rgba(140, 105, 163, 1) 100%\r\n    );\r\n    box-shadow: 0 0 20px rgb(217, 70, 87);\r\n    border: none;\r\n    border-radius: 10px;\r\n    width: 300px;\r\n    max-width: 100%;\r\n    height: 60px;\r\n    display: block;\r\n    margin: 50px auto 75px;\r\n    transition: 0.3s linear;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 500px) {\r\n      width: 260px;\r\n      height: 50px;\r\n    }\r\n\r\n    &:hover {\r\n      background: linear-gradient(\r\n        90deg,\r\n        rgba(217, 70, 87, 1) 0%,\r\n        rgba(186, 80, 112, 1) 50%,\r\n        rgba(140, 105, 163, 1) 100%\r\n      );\r\n    }\r\n\r\n    &:active {\r\n      background: linear-gradient(\r\n        90deg,\r\n        rgba(217, 70, 87, 1) 0%,\r\n        rgba(186, 80, 112, 1) 100%,\r\n        rgba(140, 105, 163, 1) 100%\r\n      );\r\n      box-shadow: 0 0 10px rgb(217, 70, 87);\r\n    }\r\n  }\r\n`;\r\n","import { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { HelpForm, AssistanceType, PaymentMethod } from './components';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { StyledApp } from './styles/StyledApp';\n\nconst App = () => {\n  const [person, setPerson] = useState(0);\n\n  const submit = (values, { setSubmitting }) => {\n    console.log(values);\n    setTimeout(() => {\n      alert(\n        'Эти данные отправляются на сервер:' +\n          '\\n' +\n          JSON.stringify(values, null, 2)\n      );\n      setSubmitting(false);\n    }, 250);\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <StyledApp>\n        <Formik\n          initialValues={{\n            person: person === 0 ? 'Фіз.особа' : 'Юр. особа',\n            name: '',\n            secondName: '',\n            company: '',\n            email: '',\n            tel: '',\n            country: '',\n            city: '',\n            state: '',\n            address: '',\n            zipCode: '',\n            oneFour: '',\n            fiveEight: '',\n            nineTwelve: '',\n            thirteenSixteen: '',\n            cardMonth: '',\n            cardCVV: ''\n          }}\n          onSubmit={submit}\n        >\n          {({ isSubmitting }) => {\n            return (\n              <Form>\n                <HelpForm person={person} setPerson={setPerson} />\n                <div className='form-wrapper'>\n                  <div className='form-wrapper__left'>\n                    <div className='name-wrapper'>\n                      <label>\n                        <span>Ім'я</span>\n                        <Field type='text' name='name' required />\n                      </label>\n                      <label>\n                        <span>Фамілія</span>\n                        <Field type='text' name='secondName' required />\n                      </label>\n                    </div>\n                    <label>\n                      <span>Назва компанії, організації</span>\n                      <Field type='text' name='company' required />\n                    </label>\n                    <label>\n                      <span>Email-адрес</span>\n                      <Field type='email' name='email' required />\n                    </label>\n                    <label>\n                      <span>Номер телефону</span>\n                      <Field type='tel' name='tel' required />\n                    </label>\n                  </div>\n                  <div className='form-wrapper__right'>\n                    <label>\n                      <span>Країна</span>\n                      <Field type='text' name='country' required />\n                    </label>\n                    <div className='city-wrapper'>\n                      <label>\n                        <span>Місто</span>\n                        <Field type='text' name='city' required />\n                      </label>\n                      <label>\n                        <span>Штат, район</span>\n                        <Field type='text' name='state' required />\n                      </label>\n                    </div>\n                    <label>\n                      <span>Адреса</span>\n                      <Field type='text' name='address' />\n                    </label>\n                    <label>\n                      <span>Поштовий індекс</span>\n                      <Field type='text' name='zipCode' />\n                    </label>\n                  </div>\n                </div>\n                <AssistanceType />\n                <div className='payment-wrapper'>\n                  <PaymentMethod />\n                  <div className='card'>\n                    <p>Введіть наступні данні</p>\n                    <div className='bank-card'>\n                      <span className='bank-card__number'>\n                        Номер карты\n                      </span>\n                      <div className='full-number'>\n                        <Field\n                          type='tel'\n                          name='oneFour'\n                          minLength='4'\n                          maxLength='4'\n                          required\n                        />\n                        <Field\n                          type='tel'\n                          name='fiveEight'\n                          minLength='4'\n                          maxLength='4'\n                          required\n                        />\n                        <Field\n                          type='tel'\n                          name='nineTwelve'\n                          minLength='4'\n                          maxLength='4'\n                          required\n                        />\n                        <Field\n                          type='tel'\n                          name='thirteenSixteen'\n                          minLength='4'\n                          maxLength='4'\n                          required\n                        />\n                      </div>\n                      <div className='bank-card__wrapper'>\n                        <div className='bank-card__month'>\n                          <span>Термін дії</span>\n                          <Field type='tel' name='cardMonth' required />\n                        </div>\n                        <div className='bank-card__password'>\n                          <span>CVC/CVV</span>\n                          <Field\n                            type='password'\n                            name='cardCVV'\n                            minLength='3'\n                            maxLength='3'\n                            required\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {person === 0 ? (\n                  <button\n                    className='btn-submit'\n                    type='submit'\n                    disabled={isSubmitting}\n                  >\n                    Допомогти\n                  </button>\n                ) : (\n                  <button\n                    className='btn-submit'\n                    type='button'\n                    onClick={() => alert('Ця форма тільки для фіз. особи')}\n                  >\n                    Допомогти\n                  </button>\n                )}\n              </Form>\n            );\n          }}\n        </Formik>\n      </StyledApp>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}